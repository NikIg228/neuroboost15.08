#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç ChatGPT
"""

import requests

def test_full_responses():
    questions = [
        "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?",
        "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —è–¥–µ—Ä–Ω—É—é —Ñ–∏–∑–∏–∫—É",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ Python?",
        "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?",
        "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫–æ—Å–º–æ—Å"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç ChatGPT")
    print("=" * 60)
    
    for i, question in enumerate(questions, 1):
        print(f"\n{i}Ô∏è‚É£ –í–æ–ø—Ä–æ—Å: {question}")
        try:
            response = requests.post(
                "http://localhost:8000/chat",
                json={"message": question},
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                data = response.json()
                reply = data['reply']
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª—É–≥
                has_recommendations = "neuroboost.kz" in reply or "–∫–∞—Ç–∞–ª–æ–≥" in reply.lower()
                
                if has_recommendations:
                    print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª—É–≥ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
                else:
                    print("‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª—É–≥ –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω—ã")
                
                print(f"üìù –û—Ç–≤–µ—Ç: {reply[:200]}...")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_full_responses()
